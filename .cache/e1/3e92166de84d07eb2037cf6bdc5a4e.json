{"id":"../node_modules/react-redux-firebase/es/utils/reducers.js","dependencies":[{"name":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/es/utils/reducers.js.map","includedInParent":true,"mtime":1586117796960},{"name":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/package.json","includedInParent":true,"mtime":1586189507230},{"name":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/.babelrc","includedInParent":true,"mtime":1586188670110},{"name":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/package.json","includedInParent":true,"mtime":1586117798920},{"name":"lodash/fp/unset","loc":{"line":1,"column":349},"parent":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/es/utils/reducers.js","resolved":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/lodash/fp/unset.js"},{"name":"lodash/pick","loc":{"line":1,"column":407},"parent":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/es/utils/reducers.js","resolved":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/lodash/pick.js"},{"name":"lodash/size","loc":{"line":1,"column":461},"parent":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/es/utils/reducers.js","resolved":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/lodash/size.js"},{"name":"lodash/get","loc":{"line":1,"column":514},"parent":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/react-redux-firebase/es/utils/reducers.js","resolved":"/Volumes/Baddy-T5/front end/FE-2018/react_js/brad_trvesy/clientpanel-react/node_modules/lodash/get.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.pathToArr=pathToArr,exports.getSlashStrPath=getSlashStrPath,exports.getDotStrPath=getDotStrPath,exports.combineReducers=combineReducers,exports.preserveValuesFromState=preserveValuesFromState,exports.recursiveUnset=recursiveUnset;var _unset2=_interopRequireDefault(require(\"lodash/fp/unset\")),_pick2=_interopRequireDefault(require(\"lodash/pick\")),_size2=_interopRequireDefault(require(\"lodash/size\")),_get2=_interopRequireDefault(require(\"lodash/get\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var source,i=1;i<arguments.length;i++)source=null==arguments[i]?{}:arguments[i],i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key])}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))});return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function pathToArr(path){return path?path.split(/\\//).filter(function(p){return!!p}):[]}function getSlashStrPath(path){return pathToArr(path).join(\"/\")}function getDotStrPath(path){return pathToArr(path).join(\".\")}function combineReducers(reducers){return function(){var state=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},action=1<arguments.length?arguments[1]:void 0;return Object.keys(reducers).reduce(function(nextState,key){return nextState[key]=reducers[key](state[key],action),nextState},{})}}function preserveValuesFromState(state,preserveSetting,nextState){if(\"function\"==typeof preserveSetting)return preserveSetting(state,nextState);if(!0===preserveSetting)return nextState?_objectSpread({},state,{},nextState):state;if(Array.isArray(preserveSetting))return(0,_pick2.default)(state,preserveSetting);throw new Error(\"Invalid preserve parameter. It must be an Object or an Array\")}function recursiveUnset(path,obj){var isRecursiveCall=!!(2<arguments.length&&arguments[2]!==void 0)&&arguments[2];if(!path)return obj;if(0<(0,_size2.default)((0,_get2.default)(obj,path))&&isRecursiveCall)return obj;var objectWithRemovedKey=(0,_unset2.default)(path,obj),newPath=path.match(/\\./)?path.replace(/\\.[^.]*$/,\"\"):\"\";return recursiveUnset(newPath,objectWithRemovedKey,!0)}\n"},"sourceMaps":{"js":{"version":3,"sources":["../../src/utils/reducers.js"],"names":["pathToArr","path","split","filter","p","getSlashStrPath","join","getDotStrPath","combineReducers","reducers","state","action","Object","keys","reduce","nextState","key","preserveValuesFromState","preserveSetting","Array","isArray","Error","recursiveUnset","obj","isRecursiveCall","objectWithRemovedKey","newPath","match","replace"],"mappings":"ugDASO,QAASA,CAAAA,SAAT,CAAmBC,IAAnB,CAAyB,CAC9B,MAAOA,CAAAA,IAAI,CAAGA,IAAI,CAACC,KAAL,CAAW,IAAX,EAAiBC,MAAjB,CAAwB,SAACC,CAAD,QAAO,CAAC,CAACA,CAAT,CAAxB,CAAH,CAAyC,EACrD,CAQM,QAASC,CAAAA,eAAT,CAAyBJ,IAAzB,CAA+B,CACpC,MAAOD,CAAAA,SAAS,CAACC,IAAD,CAAT,CAAgBK,IAAhB,CAAqB,GAArB,CACR,CAQM,QAASC,CAAAA,aAAT,CAAuBN,IAAvB,CAA6B,CAClC,MAAOD,CAAAA,SAAS,CAACC,IAAD,CAAT,CAAgBK,IAAhB,CAAqB,GAArB,CACR,CAYM,QAASE,CAAAA,eAAT,CAAyBC,QAAzB,CAAmC,CACxC,MAAO,WAAwB,IAAvBC,CAAAA,KAAuB,wDAAf,EAAe,CAAXC,MAAW,wCAC7B,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYJ,QAAZ,EAAsBK,MAAtB,CAA6B,SAACC,SAAD,CAAYC,GAAZ,CAAoB,CAMtD,MALAD,CAAAA,SAAS,CAACC,GAAD,CAAT,CAAiBP,QAAQ,CAACO,GAAD,CAAR,CAEfN,KAAK,CAACM,GAAD,CAFU,CAGfL,MAHe,CAKjB,CAAOI,SACR,CAPM,CAOJ,EAPI,CAQR,CACF,CAUM,QAASE,CAAAA,uBAAT,CAAiCP,KAAjC,CAAwCQ,eAAxC,CAAyDH,SAAzD,CAAoE,CAEzE,GAA+B,UAA3B,QAAOG,CAAAA,eAAX,CACE,MAAOA,CAAAA,eAAe,CAACR,KAAD,CAAQK,SAAR,CAAtB,CAIF,GAAI,KAAAG,eAAJ,CACE,MAAOH,CAAAA,SAAS,kBAAQL,KAAR,IAAkBK,SAAlB,EAAgCL,KAAhD,CAGF,GAAIS,KAAK,CAACC,OAAN,CAAcF,eAAd,CAAJ,CACE,MAAO,mBAAKR,KAAL,CAAYQ,eAAZ,CAAP,CAGF,KAAM,IAAIG,CAAAA,KAAJ,CACJ,8DADI,CAGP,CAYM,QAASC,CAAAA,cAAT,CAAwBrB,IAAxB,CAA8BsB,GAA9B,CAA4D,IAAzBC,CAAAA,eAAyB,6DACjE,GAAI,CAACvB,IAAL,CACE,MAAOsB,CAAAA,GAAP,CAGF,GAA2B,CAAvB,oBAAK,kBAAIA,GAAJ,CAAStB,IAAT,CAAL,GAA4BuB,eAAhC,CACE,MAAOD,CAAAA,GAAP,CAN+D,GAU3DE,CAAAA,oBAAoB,CAAG,oBAAMxB,IAAN,CAAYsB,GAAZ,CAVoC,CAW3DG,OAAO,CAAGzB,IAAI,CAAC0B,KAAL,CAAW,IAAX,EAAmB1B,IAAI,CAAC2B,OAAL,CAAa,UAAb,CAAyB,EAAzB,CAAnB,CAAkD,EAXD,CAYjE,MAAON,CAAAA,cAAc,CAACI,OAAD,CAAUD,oBAAV,IACtB","sourcesContent":["import { get, size, pick } from 'lodash'\nimport { unset } from 'lodash/fp'\n\n/**\n * Create a path array from path string\n * @param {string} path - Path seperated with slashes\n * @returns {Array} Path as Array\n * @private\n */\nexport function pathToArr(path) {\n  return path ? path.split(/\\//).filter((p) => !!p) : []\n}\n\n/**\n * Trim leading slash from path for use with state\n * @param {string} path - Path seperated with slashes\n * @returns {string} Path seperated with slashes\n * @private\n */\nexport function getSlashStrPath(path) {\n  return pathToArr(path).join('/')\n}\n\n/**\n * Convert path with slashes to dot seperated path (for use with lodash get/set)\n * @param {string} path - Path seperated with slashes\n * @returns {string} Path seperated with dots\n * @private\n */\nexport function getDotStrPath(path) {\n  return pathToArr(path).join('.')\n}\n\n/**\n * Combine reducers utility (abreveated version of redux's combineReducer).\n * Turns an object whose values are different reducer functions, into a single\n * reducer function.\n * @param {object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one.\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n * @private\n */\nexport function combineReducers(reducers) {\n  return (state = {}, action) => {\n    return Object.keys(reducers).reduce((nextState, key) => {\n      nextState[key] = reducers[key](\n        // eslint-disable-line no-param-reassign\n        state[key],\n        action\n      )\n      return nextState\n    }, {})\n  }\n}\n\n/**\n * Preserve values from redux state change\n * @param {object} state - Redux state\n * @param {Function|boolean|Array} preserveSetting - Setting for which values to preserve\n * from redux state\n * @param {object} nextState - Next redux state\n * @returns {object} State with values preserved\n */\nexport function preserveValuesFromState(state, preserveSetting, nextState) {\n  // Return result of function if preserve is a function\n  if (typeof preserveSetting === 'function') {\n    return preserveSetting(state, nextState)\n  }\n\n  // Return original state if preserve is true\n  if (preserveSetting === true) {\n    return nextState ? { ...state, ...nextState } : state\n  }\n\n  if (Array.isArray(preserveSetting)) {\n    return pick(state, preserveSetting) // pick returns a new object\n  }\n\n  throw new Error(\n    'Invalid preserve parameter. It must be an Object or an Array'\n  )\n}\n\n/**\n * Recursively unset a property starting at the deep path, and unsetting the parent\n * property if there are no other enumerable properties at that level.\n * @param {string} path - Deep dot path of the property to unset\n * @param {object} obj - Object from which path should be recursivley unset\n * @param {boolean} [isRecursiveCall=false] - Used internally to ensure that\n * the object size check is only performed after one iteration.\n * @returns {object} The object with the property deeply unset\n * @private\n */\nexport function recursiveUnset(path, obj, isRecursiveCall = false) {\n  if (!path) {\n    return obj\n  }\n\n  if (size(get(obj, path)) > 0 && isRecursiveCall) {\n    return obj\n  }\n  // The object does not have any other properties at this level.  Remove the\n  // property.\n  const objectWithRemovedKey = unset(path, obj)\n  const newPath = path.match(/\\./) ? path.replace(/\\.[^.]*$/, '') : ''\n  return recursiveUnset(newPath, objectWithRemovedKey, true)\n}\n"],"file":"reducers.js"}},"error":null,"hash":"950f2526a41335dea56ead6b520de5bb","cacheData":{"env":{}}}